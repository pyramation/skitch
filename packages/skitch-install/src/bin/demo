#!/bin/bash

skitch generate schema \
  --schema users

skitch generate table \
  --schema users \
  --table user

skitch generate column \
  --schema users \
  --table user \
  --column email \
  --columntype text \
  --columnnull 'NOT NULL'

skitch generate column \
  --schema users \
  --table user \
  --column password \
  --columntype text \
  --columnnull 'NOT NULL'

skitch generate schema \
  --schema projects

skitch generate table \
  --schema projects \
  --table project

skitch generate column \
  --schema projects \
  --table project \
  --column name \
  --columntype text \
  --columnnull 'NOT NULL'

skitch generate column \
  --schema projects \
  --table project \
  --column owner_id \
  --columntype uuid \
  --columnnull 'NOT NULL'

skitch generate foreignKey \
  --schema projects \
  --table project \
  --refschema users \
  --reftable user \
  --column owner_id \
  --refcolumn id \
  --cascade 'ON DELETE CASCADE'

skitch generate procedure \
  --schema projects \
  --procedure search_user_projects \
  --stability STABLE \
  --lang sql

cat <<EOF>./deploy/schemas/projects/procedures/search_user_projects.sql
-- Deploy schemas/projects/procedures/search_user_projects to pg

-- requires: procedures/verify_function
-- requires: schemas/projects/schema

BEGIN;

CREATE FUNCTION projects.search_user_projects (search TEXT, user_id uuid)
    RETURNS SETOF projects.project
AS \$\$
SELECT
    project.*
FROM
    projects.project AS project
WHERE
    project.name ILIKE ('%' || search || '%')
    AND project.owner_id = user_id;
\$\$
LANGUAGE 'sql' STABLE;

COMMIT;
EOF
